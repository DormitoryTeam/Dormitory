<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.noeasy.money.model.Order">

	<sql id="select-count">
		select count(*)
	</sql>

	<sql id="select-dormitory-order-content">
		select o.id as order_id, o.type as order_type, o.status as order_status, o.amount as order_amount, o.currency as order_currency, o.create_time as order_create_time,
		placer.id as placer_id, placer.login as placer_login, placer.email as placer_email, placer.alias as placer_alias,
		belong_to.id as bt_id, belong_to.login as bt_login, belong_to.email as bt_email, belong_to.alias as bt_alias,
		order_contact.id as contact_id, order_contact.order_id as contact_order_id,
		user_info.id as bti_id, user_info.name as bti_name, user_info.last_name as bti_last_name, user_info.nationality as bti_nationality, user_info.gender as bti_gender, user_info.birthday as bti_birthday, user_info.email as bti_email, user_info.qq as bti_qq, user_info.wechat as bti_wechat, user_info.phone as bti_phone, user_info.country as bti_country, user_info.province as bti_province, user_info.city as bti_city, user_info.county as bti_county, user_info.address as bti_address, user_info.postalcode as bti_postalcode, user_info.relationship as bti_relationship,
		guarantee_info.id as gi_id, guarantee_info.name as gi_name, guarantee_info.last_name as gi_last_name, guarantee_info.nationality as gi_nationality, guarantee_info.gender as gi_gender, guarantee_info.birthday as gi_birthday, guarantee_info.email as gi_email, guarantee_info.qq as gi_qq, guarantee_info.wechat as gi_wechat, guarantee_info.phone as gi_phone, guarantee_info.country as gi_country, guarantee_info.province as gi_province, guarantee_info.city as gi_city, guarantee_info.county as gi_county,  guarantee_info.address as gi_address, guarantee_info.postalcode as gi_postalcode, guarantee_info.relationship as gi_relationship,
		contact_info.id as ci_id, contact_info.name as ci_name, contact_info.last_name as ci_last_name, contact_info.nationality as ci_nationality, contact_info.gender as ci_gender, contact_info.birthday as ci_birthday, contact_info.email as ci_email, contact_info.qq as ci_qq, contact_info.wechat as ci_wechat, contact_info.phone as ci_phone, contact_info.country as ci_country, contact_info.province as ci_province, contact_info.city as ci_city, contact_info.county as ci_county, contact_info.address as ci_address, contact_info.postalcode as ci_postalcode, contact_info.relationship as ci_relationship,
		item.id as lid, item.amount as li_amount, item.currency as li_currency,
		dormitory.id as dormitory_id, dormitory.city_id as dormitory_city_id, dormitory.name as dormitory_name, dormitory.address as dormitory_address, dormitory.postcode as dormitory_postcode, dormitory.listPrice as dormitory_listPrice, dormitory.salePrice as dormitory_salePrice, dormitory.currency as dormitory_currency, dormitory.equipment as dormitory_equipment, dormitory.service as dormitory_service, dormitory.description as dormitory_description, dormitory.status as dormitory_status,
		room_info.id as ri_id, room_info.dormitory_id as ri_dormitory_id, room_info.room_type_id as ri_room_type_id, room_info.description as ri_description, room_info.checkin_date as ri_checkin_date, room_info.orientations as ri_orientations, room_info.floors as ri_floors, room_info.bed_type as ri_bed_type, room_info.house_area as ri_house_area, room_info.ensuite_bathroom as ri_ensuite_bathroom, room_info.kitchen_people_number as ri_kitchen_people_number, room_info.floor_arrangement as ri_floor_arrangement, room_info.orientation_arrangement as ri_orientation_arrangement, room_info.room_language_arrangement as ri_language_arrangement, room_info.kitchen_equipment as ri_kitchen_equipment, room_info.bathroom_equipment as ri_bathroom_equipment, room_info.status as ri_status,
		room_type.name as ri_room_type,
		contract_type.id as ct_id, contract_type.name as ct_name,
		prefer.id as prefer_id, prefer.smoke as prefer_smoke, prefer.vegetarianism as prefer_vegetarianism, prefer.your_grade as prefer_your_grade, prefer.room_member_grade as prefer_room_member_grade, prefer.room_member_gender as prefer_room_member_gender, prefer.major as prefer_major, prefer.college as prefer_college, prefer.floor as prefer_floor, prefer.orientation as prefer_orientation, prefer.graduate_school as prefer_graduate_school, prefer.need_push as prefer_need_push, prefer.read_clause as prefer_read_clause
	</sql>
	<sql id="select-dormitory-order-table-join">
		from `order` as o
		left join users as placer on placer.id = o.user_id 
		left join users as belong_to on belong_to.id = o.belongs_to
		left join order_contact_info as order_contact on order_contact.order_id = o.id
		left join user_info as user_info on user_info.id = order_contact.belong_to_user_info_id
		left join user_info as guarantee_info on guarantee_info.id = order_contact.guarantee_info_id
		left join user_info as contact_info on contact_info.id = order_contact.contact_person_info_id
		left join user_prefer as prefer on prefer.id = order_contact.prefer_id
		left join line_item_dormitory as item on item.order_id = o.id
		left join dormitory as dormitory on dormitory.id = item.dormitory_id
		left join room_info as room_info on room_info.id = item.room_info_id
		left join room_type as room_type on room_info.room_type_id = room_type.id
		left join contract_type as contract_type on contract_type.id = item.contract_type_id
	</sql>

	<sql id="select-pickup-order-content">
		select o.id as order_id, o.type as order_type, o.status as order_status, o.amount as order_amount, o.currency as order_currency, o.create_time as order_create_time,
		placer.id as placer_id, placer.login as placer_login, placer.email as placer_email, placer.alias as placer_alias,
		belong_to.id as bt_id, belong_to.login as bt_login, belong_to.email as bt_email, belong_to.alias as bt_alias,
		order_contact.id as contact_id, order_contact.order_id as contact_order_id,
		user_info.id as bti_id, user_info.name as bti_name, user_info.last_name as bti_last_name, user_info.nationality as bti_nationality, user_info.gender as bti_gender, user_info.birthday as bti_birthday, user_info.email as bti_email, user_info.qq as bti_qq, user_info.wechat as bti_wechat, user_info.phone as bti_phone, user_info.country as bti_country, user_info.province as bti_province, user_info.city as bti_city, user_info.county as bti_county, user_info.address as bti_address, user_info.postalcode as bti_postalcode, user_info.relationship as bti_relationship,
		item.id as lid, item.amount as li_amount, item.currency as li_currency, item.city_id as li_city_id, item.pickup_date as li_pickup_date, item.pickup_type as li_pickup_type, item.luggage_amount as li_luggage_amount, item.luggage_size as li_luggage_size, item.takeoff_date as li_takeoff_date, item.takeoff_city as li_takeoff_city, item.arrival_city as li_arrival_city, item.arrival_country as li_arrival_country, item.arrival_airport as li_arrival_airport, item.flight_company as li_flight_company, item.flight_number as li_flight_number, item.pickup_to_city as li_pickup_to_city, item.pickup_to_address as li_pickup_to_address, item.pickup_to_dormitory as li_pickup_to_dormitory, item.pickup_to_postalcode as li_pickup_to_postalcode
	</sql>

	<sql id="select-pickup-order-table-join">
		from `order` as o
		left join users as placer on placer.id = o.user_id 
		left join users as belong_to on belong_to.id = o.belongs_to
		left join order_contact_info as order_contact on order_contact.order_id = o.id
		left join user_info as user_info on user_info.id = order_contact.belong_to_user_info_id
		left join line_item_pickup as item on item.order_id = o.id
	</sql>

	<sql id="where">
		where 1=1
	</sql>

	<sql id="select-order-condition">
		<if test="orderNumber != null">
			and o.id = #{orderNumber}
		</if>
		<if test="dateFrom != null">
			and o.create_time &gt;= #{dateFrom}
		</if>
		<if test="dateTo != null">
			and o.create_time &lt;= #{dateTo}
		</if>
		<if test="user != null">
			<if test="user.id != null">
				and (o.belongs_to = #{user.id} or o.user_id = #{user.id})
			</if>
			<if test="user.login != null">
				and (placer.login like CONCAT('%', #{user.login}, '%') or belong_to.login like
				CONCAT('%', #{user.login}, '%'))
			</if>
		</if>
		<if test="orderType != null">
			and o.type = #{orderType}
		</if>
	</sql>

	<sql id="limit-split-page">
		limit #{pageBean.pageStartIndex}, #{pageBean.pageSize}
	</sql>

	<select id="queryDormitoryOrder" resultMap="dormitory-order">
		<include refid="select-dormitory-order-content" />
		<include refid="select-dormitory-order-table-join" />
		<include refid="where" />
		<include refid="select-order-condition" />
		<if test="pageBean != null">
			<include refid="limit-split-page" />
		</if>
	</select>

	<select id="queryDormitoryOrderCount" resultType="int">
		<include refid="select-count" />
		<include refid="select-dormitory-order-table-join" />
		<include refid="where" />
		<include refid="select-order-condition" />
	</select>

	<select id="queryPickupOrder" resultMap="pickup-order">
		<include refid="select-pickup-order-content" />
		<include refid="select-pickup-order-table-join" />
		<include refid="where" />
		<include refid="select-order-condition" />
		<if test="pageBean != null">
			<include refid="limit-split-page" />
		</if>
	</select>
	<select id="queryPickupOrderCount" resultType="int">
		<include refid="select-count" />
		<include refid="select-pickup-order-table-join" />
		<include refid="where" />
		<include refid="select-order-condition" />
	</select>

	<insert id="saveOrder" keyProperty="id" useGeneratedKeys="true"
		parameterType="com.noeasy.money.model.OrderBean">
		insert into `order` (user_id, belongs_to, `type`,
		status, amount, currency) values (
		#{user.id,javaType=int,jdbcType=INTEGER},
		#{belongsTo.id,javaType=int,jdbcType=INTEGER},
		#{orderType.name,javaType=String,jdbcType=VARCHAR},
		#{orderStatus.name,javaType=String,jdbcType=VARCHAR},
		#{amount,javaType=java.math.BigDecimal,jdbcType=DECIMAL},
		#{currency,javaType=String,jdbcType=VARCHAR}
		)
	</insert>

	<insert id="saveOrderContactInfo" keyProperty="id"
		useGeneratedKeys="true" parameterType="com.noeasy.money.model.OrderContactInfo">
		insert into order_contact_info
		(order_id, belong_to_user_info_id, guarantee_info_id, contact_person_info_id, prefer_id, update_time) values (
		#{orderId,javaType=int,jdbcType=INTEGER},
		#{belongsToInfo,javaType=int,jdbcType=INTEGER},
		#{guaranteeInfo,javaType=int,jdbcType=INTEGER},
		#{contactPersonInfo,javaType=int,jdbcType=INTEGER},
		#{prefer,javaType=int,jdbcType=INTEGER},
		now()
		)
	</insert>

	<insert id="saveOrderHistory" keyProperty="id" useGeneratedKeys="true"
		parameterType="com.noeasy.money.model.OrderTail">
		insert into order_history (order_id, operator_id,
		operation) values (
		#{orderId,javaType=int,jdbcType=INTEGER},
		#{operator.id,javaType=int,jdbcType=INTEGER},
		#{operation.name,javaType=String,jdbcType=VARCHAR}
		)
	</insert>

	<insert id="saveDormitoryLineItem" keyProperty="id"
		useGeneratedKeys="true" parameterType="com.noeasy.money.model.DormitoryLineItem">
		insert into line_item_dormitory
		(order_id, dormitory_id, room_info_id, contract_type_id, listPrice, amount, currency, dormitory_info_date, create_time, update_time) values (
		#{orderId,javaType=int,jdbcType=INTEGER},
		#{dormitory.id,javaType=int,jdbcType=INTEGER},
		#{roomInfo.id,javaType=int,jdbcType=INTEGER},
		#{contractType.id,javaType=int,jdbcType=INTEGER},
		#{listPrice,javaType=java.math.BigDecimal,jdbcType=DECIMAL},
		#{amount,javaType=java.math.BigDecimal,jdbcType=DECIMAL},
		#{currency,javaType=String,jdbcType=VARCHAR},
		now(),
		now(),
		now()
		)
	</insert>

	<insert id="savePickupLineItem" keyProperty="id"
		useGeneratedKeys="true" parameterType="com.noeasy.money.model.PickupLineItem">
		insert into line_item_pickup
		(order_id, flight_number, city_id, pickup_date, pickup_type, amount,
		currency, luggage_amount, luggage_size, takeoff_date, takeoff_city, arrival_city, arrival_country, arrival_airport, flight_company, pickup_to_city, pickup_to_address, pickup_to_dormitory, pickup_to_postalcode) values (
		#{orderId,javaType=int,jdbcType=INTEGER},
		#{flightNum,javaType=String,jdbcType=VARCHAR},
		#{cityId,javaType=int,jdbcType=INTEGER},
		#{pickupDate,javaType=java.util.Date,jdbcType=TIMESTAMP},
		#{pickupType.name,javaType=String,jdbcType=VARCHAR},
		#{amount,javaType=java.math.BigDecimal,jdbcType=DECIMAL},
		#{currency,javaType=String,jdbcType=VARCHAR},
		#{luggageAmount,javaType=int,jdbcType=INTEGER},
		#{luggageSize,javaType=Double,jdbcType=DECIMAL},
		#{takeOffDate,javaType=java.util.Date,jdbcType=TIMESTAMP},
		#{takeOffCity,javaType=String,jdbcType=VARCHAR},
		#{arrivalCity,javaType=String,jdbcType=VARCHAR},
		#{arrivalCountry,javaType=String,jdbcType=VARCHAR},
		#{arrivalAirport,javaType=String,jdbcType=VARCHAR},
		#{flightCompany,javaType=String,jdbcType=VARCHAR},
		#{pickup2City,javaType=String,jdbcType=VARCHAR},
		#{pickup2Address,javaType=String,jdbcType=VARCHAR},
		#{pickup2Dormitory,javaType=String,jdbcType=VARCHAR},
		#{pickup2Postalcode,javaType=String,jdbcType=VARCHAR}
		)
	</insert>

	<select id="isPaymentDone" parameterType="int" resultType="int">
		SELECT count(id) FROM `order` WHERE id = #{id} AND (status =
		'PAYMENT_DONE' OR status = 'PASS' OR status = 'SENDING_CONTACT');
	</select>

	<update id="updateOrderStatus" parameterType="com.noeasy.money.model.OrderBean">
		UPDATE `order` SET
		status = #{orderStatus.name,javaType=String,jdbcType=VARCHAR},
		update_time = now()
		WHERE id = #{id}
	</update>
	<update id="updateOrderPrice" parameterType="com.noeasy.money.model.OrderBean">
		UPDATE `order` SET
		amount = #{amount},
		update_time = now()
		WHERE id = #{id}
	</update>
	<update id="updateOrder" parameterType="com.noeasy.money.model.OrderBean">
		UPDATE `order` SET
		<if test="amount != null">
			amount = #{amount},
		</if>
		<if test="orderType != null">
			type = #{orderType},
		</if>
		<if test="user != null">
			user_id = #{user.id},
		</if>
		<if test="belongsTo != null">
			belongs_to = #{belongsTo.id},
		</if>
		update_time = now()
		WHERE id = #{id}
	</update>
	<update id="updateDormitoryLineItem" parameterType="com.noeasy.money.model.DormitoryLineItem">
		UPDATE line_item_dormitory SET
		<if test="orderId != null">
			order_id = #{orderId},
		</if>
		<if test="dormitory != null and dormitory.id != null">
			dormitory_id = #{dormitory.id},
		</if>
		<if test="roomInfo != null and roomInfo.id != null">
			room_info_id = #{roomInfo.id},
		</if>
		<if test="contractType != null and contractType.id != null">
			contract_type_id = #{contractType.id},
		</if>
		<if test="listPrice != null">
			listPrice = #{listPrice},
		</if>
		<if test="amount != null">
			amount = #{amount},
		</if>
		<if test="currency != null">
			currency = #{currency},
		</if>
		update_time = now()
		WHERE id = #{id}
	</update>
	
	<update id="updatePickupLineItem" parameterType="com.noeasy.money.model.PickupLineItem">
		UPDATE line_item_pickup SET
		<if test="amount != null">
			amount = #{amount},
		</if>
		<if test="currency != null">
			currency = #{currency},
		</if>
		<if test="flightNum != null">
		flight_number = #{flightNum},
		</if>
		<if test="cityId != null">city_id= #{cityId},</if>
		<if test="pickupDate != null">pickup_date = #{pickupDate},</if>
		<if test="pickupType != null">pickup_type= #{pickupType},</if>
		<if test="luggageAmount != null">luggage_amount = #{luggageAmount},</if>
		<if test="luggageSize != null">luggage_size = #{luggageSize},</if>
		<if test="takeOffDate != null">takeoff_date = #{takeOffDate},</if>
		<if test="takeOffCity != null">takeoff_city = #{takeOffCity},</if>
		<if test="arrivalCity != null">arrival_city = #{arrivalCity},</if>
		<if test="arrivalCountry != null">arrival_country = #{arrivalCountry},</if>
		<if test="arrivalAirport != null">arrival_airport = #{arrivalAirport},</if>
		<if test="flightCompany != null">flight_company = #{flightCompany},</if>
		<if test="pickup2City != null">pickup_to_city = #{pickup2City},</if>
		<if test="pickup2Address != null">pickup_to_address = #{pickup2Address},</if>
		<if test="pickup2Dormitory != null">pickup_to_dormitory = #{pickup2Dormitory},</if>
		<if test="pickup2Postalcode != null">pickup_to_postalcode= #{pickup2Postalcode},</if>
		order_id = #{orderId}
		WHERE id = #{id}
	</update>
	
	<select id="findOrderById" parameterType="int" resultMap="dormitory-order">
		<include refid="select-dormitory-order-content" />
		<include refid="select-dormitory-order-table-join" />
		WHERE o.id = #{id}
	</select>
	
	<select id="findPickupOrderById" parameterType="int" resultMap="pickup-order">
		<include refid="select-pickup-order-content" />
		<include refid="select-pickup-order-table-join" />
		WHERE o.id = #{id}
	</select>

	<resultMap id="belongToInfo" type="com.noeasy.money.model.UserInfoBean">
		<id property="id" column="bti_id" />
		<result property="name" column="bti_name" />
		<result property="lastName" column="bti_last_name" />
		<result property="nationality" column="bti_nationality" />
		<result property="gender" column="bti_gender" />
		<result property="birthday" column="bti_birthday" />
		<result property="email" column="bti_email" />
		<result property="qq" column="bti_qq" />
		<result property="wechat" column="bti_wechat" />
		<result property="phone" column="bti_phone" />
		<result property="country" column="bti_country" />
		<result property="province" column="bti_province" />
		<result property="city" column="bti_city" />
		<result property="county" column="bti_county" />
		<result property="address" column="bti_address" />
		<result property="postalcode" column="bti_postalcode" />
		<result property="relationship" column="bti_relationship" />
	</resultMap>

	<resultMap id="contactInfo" type="com.noeasy.money.model.UserInfoBean">
		<id property="id" column="ci_id" />
		<result property="name" column="ci_name" />
		<result property="lastName" column="ci_last_name" />
		<result property="nationality" column="ci_nationality" />
		<result property="gender" column="ci_gender" />
		<result property="birthday" column="ci_birthday" />
		<result property="email" column="ci_email" />
		<result property="qq" column="ci_qq" />
		<result property="wechat" column="ci_wechat" />
		<result property="phone" column="ci_phone" />
		<result property="country" column="ci_country" />
		<result property="province" column="ci_province" />
		<result property="city" column="ci_city" />
		<result property="county" column="ci_county" />
		<result property="address" column="ci_address" />
		<result property="postalcode" column="ci_postalcode" />
		<result property="relationship" column="ci_relationship" />
	</resultMap>

	<resultMap id="guaranteeInfo" type="com.noeasy.money.model.UserInfoBean">
		<id property="id" column="gi_id" />
		<result property="name" column="gi_name" />
		<result property="lastName" column="gi_last_name" />
		<result property="nationality" column="gi_nationality" />
		<result property="gender" column="gi_gender" />
		<result property="birthday" column="gi_birthday" />
		<result property="email" column="gi_email" />
		<result property="qq" column="gi_qq" />
		<result property="wechat" column="gi_wechat" />
		<result property="phone" column="gi_phone" />
		<result property="country" column="gi_country" />
		<result property="province" column="gi_province" />
		<result property="city" column="gi_city" />
		<result property="county" column="gi_county" />
		<result property="address" column="gi_address" />
		<result property="postalcode" column="gi_postalcode" />
		<result property="relationship" column="gi_relationship" />
	</resultMap>
	
	<resultMap id="userPrefer" type="com.noeasy.money.model.UserPreferBean">
		<id property="id" column="prefer_id" />
		<result property="smoke" column="prefer_smoke" />
		<result property="vegetarianism" column="prefer_vegetarianism" />
		<result property="yourGrade" column="prefer_your_grade" />
		<result property="roomMemberGrade" column="prefer_room_member_grade" />
		<result property="roomMemberGender" column="prefer_room_member_gender" />
		<result property="major" column="prefer_major" />
		<result property="college" column="prefer_college" />
		<result property="floor" column="prefer_floor" />
		<result property="orientation" column="prefer_orientation" />
		<result property="graduateSchool" column="prefer_graduate_school" />
		<result property="needPush" column="prefer_need_push" />
		<result property="readClause" column="prefer_read_clause" />
	</resultMap>

	<resultMap id="placer" type="com.noeasy.money.model.UserBean">
		<id property="id" column="placer_id" />
		<result property="login" column="placer_login" />
		<result property="alias" column="placer_alias" />
		<result property="email" column="placer_email" />
	</resultMap>

	<resultMap id="belongTo" type="com.noeasy.money.model.UserBean">
		<id property="id" column="bt_id" />
		<result property="login" column="bt_login" />
		<result property="alias" column="bt_alias" />
		<result property="email" column="bt_email" />
	</resultMap>

	<resultMap id="orderContact" type="com.noeasy.money.model.OrderContactInfo">
		<id property="id" column="contact_id" />
		<result property="orderId" column="contact_order_id" />
		<association property="belongsToInfo" column="bti_id"
			resultMap="belongToInfo" />
		<association property="guaranteeInfo" column="gi_id"
			resultMap="guaranteeInfo" />
		<association property="contactPersonInfo" column="ci_id"
			resultMap="contactInfo" />
		<association property="prefer" column="prefer_id"
			resultMap="userPrefer" />
	</resultMap>
	
	<resultMap id="dormitory-order" type="com.noeasy.money.model.OrderBean">
		<id property="id" column="order_id" />
		<result property="orderType" column="order_type" />
		<result property="orderStatus" column="order_status" />
		<result property="currency" column="order_currency" />
		<result property="amount" column="order_amount" />
		<result property="createTime" column="order_create_time" />
		<association property="user" column="placer_id" resultMap="placer" />
		<association property="belongsTo" column="bt_id"
			resultMap="belongTo" />
		<association property="orderContact" column="cid"
			resultMap="orderContact" />
		<collection property="lineItems"
			ofType="com.noeasy.money.model.DormitoryLineItem">
			<id property="id" column="lid" />
			<result property="amount" column="li_amount" />
			<result property="listPrice" column="li_listPrice" />
			<result property="currency" column="li_currency" />
			<association property="dormitory" column="dormitory_id"
				javaType="com.noeasy.money.model.DormitoryBean">
				<id property="id" column="dormitory_id" />
				<result property="cityId" column="dormitory_city_id" />
				<result property="name" column="dormitory_name" />
				<result property="address" column="dormitory_address" />
				<result property="postcode" column="dormitory_postcode" />
				<result property="listPrice" column="dormitory_listPrice" />
				<result property="salePrice" column="dormitory_salePrice" />
				<result property="currency" column="dormitory_currency" />
				<result property="equipment" column="dormitory_equipment" />
				<result property="service" column="dormitory_service" />
				<result property="description" column="dormitory_description" />
				<result property="status" column="dormitory_status" />
			</association>
			<association property="roomInfo" column="ri_id"
				javaType="com.noeasy.money.model.RoomInfoBean">
				<id property="id" column="ri_id" />
				<result property="dormitoryId" column="ri_dormitory_id" />
				<result property="roomTypeId" column="ri_room_type_id" />
				<result property="roomType" column="ri_room_type" />
				<result property="description" column="ri_description" />
				<result property="checkinDate" column="ri_checkin_date" />
				<result property="orientation" column="ri_orientations" />
				<result property="floors" column="ri_floors" />
				<result property="bedType" column="ri_bed_type" />
				<result property="houseArea" column="ri_house_area" />
				<result property="ensuitBathroom" column="ri_ensuite_bathroom" />
				<result property="kitchenPeople" column="ri_kitchen_people_number" />
				<result property="floorArrange" column="ri_floor_arrangement" />
				<result property="orientationArrange" column="ri_orientation_arrangement" />
				<result property="roomLanguageArrange" column="ri_language_arrangement" />
				<result property="kitchenEquipment" column="ri_kitchen_equipment" />
				<result property="bathroomEquipment" column="ri_bathroom_equipment" />
				<result property="status" column="ri_status" />
			</association>
			<association property="contractType" column="ct_id"
				javaType="com.noeasy.money.model.ContractType">
				<id property="id" column="ct_id" />
				<result property="name" column="ct_name" />
			</association>
		</collection>
	</resultMap>

	<resultMap id="pickup-order" type="com.noeasy.money.model.OrderBean">
		<id property="id"  column="order_id" />
		<result property="orderType" column="order_type" />
		<result property="orderStatus" column="order_status" />
		<result property="currency" column="order_currency" />
		<result property="amount" column="order_amount" />
		<result property="createTime" column="order_create_time" />
		<association property="user" column="placer_id" resultMap="placer" />
		<association property="belongsTo" column="bt_id"
			resultMap="belongTo" />
		<association property="orderContact" column="cid"
			resultMap="orderContact" />
		<collection property="lineItems"
			ofType="com.noeasy.money.model.PickupLineItem">
			<id property="id" column="lid" />
			<result property="flightNum" column="li_flight_number" />
			<result property="cityId" column="li_city_id" />
			<!-- result property="landingCity" column="city_name" / -->
			<result property="pickupDate" column="li_pickup_date" />
			<result property="pickupType" column="li_pickup_type" />
			<result property="luggageAmount" column="li_luggage_amount" />
			<result property="luggageSize" column="li_luggage_size" />
			<result property="takeOffDate" column="li_takeoff_date" />
			<result property="takeOffCity" column="li_takeoff_city" />
			<result property="arrivalCity" column="li_arrival_city" />
			<result property="arrivalCountry" column="li_arrival_country" />
			<result property="arrivalAirport" column="li_arrival_airport" />
			<result property="flightCompany" column="li_flight_company" />
			<result property="pickup2City" column="li_pickup_to_city" />
			<result property="pickup2Address" column="li_pickup_to_address" />
			<result property="pickup2Dormitory" column="li_pickup_to_dormitory" />
			<result property="pickup2Postalcode" column="li_pickup_to_postalcode" />
			<result property="amount" column="li_amount" />
			<result property="currency" column="li_currency" />
		</collection>
	</resultMap>
</mapper>