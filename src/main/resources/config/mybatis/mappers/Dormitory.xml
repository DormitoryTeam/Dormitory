<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.noeasy.money.model.Dormitory">

	<!-- Select Dormitory -->
	<sql id="select-dormitory">
		select t1.id, ti.name, t1.address, t1.postcode, t1.equipment, t1.service, t1.salePrice, t1.listPrice, t1.description
		t1.type_id as dormitoryTypeId, t2.name as dormitoryType,
		t1.contract_type_id as contractId, t3.name as
		contract,
		t1.city_id as cityId, t4.name as city, avg(t5.score) as ranting
		from dormitory t1
		left join dormitory_type t2 on t1.type_id = t2.id
		left join contract_type t3 on t1.contract_type_id = t3.id
		left join city t4 on t1.city_id = t4.id
		left join
		dormitory_rating on t1.id =t5.dormitory_id
	</sql>

	<sql id="where-with-id">
		<![CDATA[
			where t1.id = #id
		]]>
	</sql>
	
	<sql id="where-with-college-id">
		<![CDATA[

		]]>
	</sql>

	<select id="queryDormitoryById" parameterType='int' resultType="com.noeasy.money.model.DormitoryBean">
		<include refid="select-dormitory" />
		<include refid="where-with-id" />
	</select>

	<!-- Rate Dormitory -->
	<insert id="rate" keyProperty="id" useGeneratedKeys='true' parameterType="com.noeasy.money.model.DormitoryRateBean">
		insert into dormitory_rating (id, dormitory_id, user_id, score) values (
		#{id},
		#{dormitoryId,javaType=int,jdbcType=INTEGER},
		#{userId,javaType=int,jdbcType=INTEGER},
		#{point,javaType=int,jdbcType=INTEGER}
		)
	</insert>

	<select id="calculateAvgRating" parameterType="int" resultType="java.lang.Double">
		select avg(t1.score) from dormitory_rating t1
		where t1.dormitory_id = #{dormitoryId};
	</select>

	<!-- Calculate Distance -->
	<delete id="clearDistanceResult">
		DELETE FROM distance_result;
	</delete>

	<insert id="initialDistanceResult">
		INSERT INTO distance_result(city_id, college_id, dormitory_id, distance, create_time, update_time)
		SELECT t2.city_id, t2.college_id, t2.dormitory_id, 2*R*ASIN(d/2/R) AS distance, now() AS create_time, now() AS update_time
		FROM (SELECT 6378 AS R) t0,
		(SELECT t1.city_id, t1.college_id, t1.dormitory_id, SQRT(dx*dx+dy*dy+dz*dz) AS d
		FROM (
		SELECT p1.x-p2.x AS dx, p1.y-p2.y AS dy, p1.z-p2.z AS dz, p1.city_id, p1.college_id, p2.dormitory_id
		FROM view_college_glb p1
		INNER JOIN view_dormitory_glb p2
		ON p1.city_id = p2.city_id
		) t1) t2;
	</insert>
</mapper>