<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.noeasy.money.model.Dormitory">

	<!-- Select Dormitory -->
	<!-- SQL Fraggment -->
	<sql id="select-dormitory-content">
		select t1.id, t1.name, t1.address, t1.postcode, t1.equipment, t1.service, t1.salePrice, t1.listPrice, t1.currency, t1.description, t1.type_id as dormitoryTypeId, t1.city_id as cityId, t1.contract_type_id as contractId, t1.latitude, t1.longitude, 
		t2.name
		as dormitoryType,
		t3.name as contract,
		t4.name as city,
		coalesce(avg(t5.score), 0) as rating
		<if test="collegeId != null">
			,ifnull(t6.distance, 0) as distance
		</if>
	</sql>


	<sql id="select-dormitory-count-pre">
		select count(*) from ( select t1.id
	</sql>
	<sql id="select-dormitory-count-post">
		) as result
	</sql>

	<sql id="select-dormitory-table-join">
		from dormitory t1
		left join dormitory_type t2 on t1.type_id = t2.id
		left join contract_type t3 on t1.contract_type_id = t3.id
		left join city t4 on t1.city_id = t4.id
		left join dormitory_rating t5 on t1.id = t5.dormitory_id
		left join distance_result t6 on t1.id = t6.dormitory_id 
		<if test="collegeId != null">
			and t6.college_id = #{collegeId}
		</if>
	</sql>
	
	<sql id="seledct-dormitory-media">
		select media_path 
		from dormitory_media 
	</sql>
	
	<sql id="where">
		where 1=1
	</sql>

	<sql id="where-with-id">
		and t1.id = #{id}
	</sql>

	<sql id="where-with-city-id">
		and t1.city_id = #{cityId}
	</sql>

	<sql id="where-with-keyword">
		and (t1.name like concat('%', #{keyword}, '%') or t1.address like concat('%', #{keyword}, '%')
		or t1.postcode like concat('%', #{keyword}, '%') or t1.description like concat('%', #{keyword}, '%'))
	</sql>

	<sql id="where-with-dormitory-type">
		and t1.type_id = #{dormitoryTypeId}
	</sql>

	<sql id="where-with-contract">
		and t1.contract_type_id = #{contractTypeId}
	</sql>

	<sql id="where-with-dormitory-name">
		and t1.name like concat('%', #{dormitoryName}, '%')
	</sql>

	<sql id="where-with-city-name">
		and t4.name like concat('%', #{cityName}, '%')
	</sql>
	
	<sql id="where-with-media-type">
		and dormitory_id = #{dormitoryId} and media_type = #{mediaType}
	</sql>

	<sql id="group-by-id">
		group by t1.id
	</sql>

	<sql id="order-by-order-field">
		order by ${sortBy}
	</sql>
	
	<sql id="order-by-field">
		order by ${sortField} asc
	</sql>

	<sql id="limit-split-page">
		limit #{pageBean.pageStartIndex}, #{pageBean.pageSize}
	</sql>

	<select id="queryDormitoryPage" parameterType='com.noeasy.money.model.DormitorySearchBean' resultMap="dormitory">
		<include refid="select-dormitory-content" />
		<include refid="select-dormitory-table-join" />
		<include refid="where" />
		<if test="id != null">
			<include refid="where-with-id" />
		</if>
		<if test="dormitoryName != null">
			<include refid="where-with-dormitory-name" />
		</if>
		<if test="cityId != null">
			<include refid="where-with-city-id" />
		</if>
		<if test="cityName != null">
			<include refid="where-with-city-name" />
		</if>
		<if test="dormitoryTypeId != null">
			<include refid="where-with-dormitory-type" />
		</if>
		<if test="contractTypeId != null ">
			<include refid="where-with-contract" />
		</if>
		<if test="keyword != null">
			<include refid="where-with-keyword" />
		</if>
		<include refid="group-by-id" />
		<if test="sortBy != null">
			<include refid="order-by-order-field" />
		</if>
		<if test="pageBean != null">
			<include refid="limit-split-page" />
		</if>
	</select>

	<select id="queryDormitoryCount" parameterType='com.noeasy.money.model.DormitorySearchBean' resultType="int">
		<include refid="select-dormitory-count-pre" />
		<include refid="select-dormitory-table-join" />
		<include refid="where" />
		<if test="id != null">
			<include refid="where-with-id" />
		</if>
		<if test="dormitoryName != null">
			<include refid="where-with-dormitory-name" />
		</if>
		<if test="cityId != null">
			<include refid="where-with-city-id" />
		</if>
		<if test="cityName != null">
			<include refid="where-with-city-name" />
		</if>
		<if test="dormitoryTypeId != null">
			<include refid="where-with-dormitory-type" />
		</if>
		<if test="contractTypeId != null ">
			<include refid="where-with-contract" />
		</if>
		<if test="keyword != null">
			<include refid="where-with-keyword" />
		</if>
		<include refid="group-by-id" />
		<include refid="select-dormitory-count-post" />
	</select>


	<resultMap id="dormitory" type="com.noeasy.money.model.DormitoryBean">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="address" property="address" />
		<result column="postcode" property="postCode" />
		<result column="equipment" property="equipment" />
		<result column="service" property="service" />
		<result column="salePrice" property="salePrice" />
		<result column="listPrice" property="listPrice" />
		<result column="latitude" property="latitude" />
		<result column="longitude" property="longitude" />
		<result column="currency" property="currency" />
		<result column="description" property="description" />
		<result column="dormitoryTypeId" property="dormitoryTypeId" />
		<result column="cityId" property="cityId" />
		<result column="dormitoryType" property="dormitoryType" />
		<result column="contractId" property="contractId" />
		<result column="contract" property="contract" />
		<result column="city" property="city" />
		<result column="distance" property="distance" />
		<result column="rating" property="rating" />
	</resultMap>
	
	<select id="query-media-path" resultType="string" parameterType="java.util.Map">
		<include refid="seledct-dormitory-media"/>
		<include refid="where" />
		<include refid="where-with-media-type"/>
		<include refid="order-by-field"/>
	</select>
	
	<update id="update-dormitory" parameterType="com.noeasy.money.model.DormitoryBean">
		update dormitory set 
			name = #{name},
			address = #{address},
			postcode = #{postCode},
			<if test="equipment != ''">
				equipment = #{equipment},
			</if>
			<if test="service != ''">
				service = #{service},
			</if>
			listPrice = #{listPrice},
			salePrice = #{salePrice},
			latitude = #{latitude},
			longitude = #{longitude},
			currency = #{currency},
			description = #{description},
			type_id = #{dormitoryTypeId},
			city_id = #{cityId},
			contract_type_id = #{contractId}
		where id = #{id}
	</update>
	
	<insert id="save-dormitory" keyProperty="id" useGeneratedKeys='true' parameterType="com.noeasy.money.model.DormitoryBean">
		insert into dormitory (city_id, type_id, contract_type_id, name, address, postcode, listPrice, salePrice, currency, latitude, longitude, equipment, service, description, status) values (
			#{cityId,javaType=int,jdbcType=INTEGER},
			#{dormitoryTypeId,javaType=int,jdbcType=INTEGER},
			#{contractId,javaType=int,jdbcType=INTEGER},
			#{name,javaType=String,jdbcType=VARCHAR},
			#{address,javaType=String,jdbcType=VARCHAR},
			#{postCode,javaType=String,jdbcType=VARCHAR},
			#{listPrice,javaType=Double,jdbcType=DECIMAL},
			#{salePrice,javaType=Double,jdbcType=DECIMAL},
			#{currency,javaType=String,jdbcType=VARCHAR},
			#{latitude,javaType=Double,jdbcType=INTEGER},
			#{longitude,javaType=Double,jdbcType=INTEGER},
			#{equipment,javaType=String,jdbcType=INTEGER},
			#{service,javaType=String,jdbcType=INTEGER},
			#{description,javaType=String,jdbcType=VARCHAR},
			1
		);
	</insert>
	
	<insert id="insert-image-path" parameterType="java.util.List">
		insert into dormitory_media (dormitory_id, media_type, media_path, `index`) values
		<foreach collection="list" item="item" index="index" open="" close="" separator=",">
			(#{item.dormitoryId}, 1, #{item.path}, #{index})
		</foreach>
	</insert>
	
	<insert id="insert-video-path" parameterType="java.util.List">
		insert into dormitory_media (dormitory_id, media_type, media_path, `index`) values
		<foreach collection="list" item="item" index="index" open="" close="" separator=",">
			(#{item.dormitoryId}, 2, #{item.path}, #{index})
		</foreach>
	</insert>
	
	<delete id="remove-media-path" parameterType="int">
		delete from dormitory_media where dormitory_id = #{dormitoryId};
	</delete>

	<!-- Rate Dormitory -->
	<insert id="rate" keyProperty="id" useGeneratedKeys='true' parameterType="com.noeasy.money.model.DormitoryRateBean">
		insert into dormitory_rating (dormitory_id, user_id, score, update_time) values (
		#{dormitoryId,javaType=int,jdbcType=INTEGER},
		#{userId,javaType=int,jdbcType=INTEGER},
		#{point,javaType=int,jdbcType=INTEGER},
		#{updateTime,javaType=java.sql.Timestamp,jdbcType=TIMESTAMP}
		)
	</insert>

	<select id="calculateAvgRating" parameterType="int" resultType="java.lang.Double">
		select avg(t1.score) from dormitory_rating t1
		where t1.dormitory_id = #{dormitoryId};
	</select>

	<!-- Calculate Distance -->
	<delete id="clearDistanceResult">
		DELETE FROM distance_result;
	</delete>

	<insert id="initialDistanceResult">
		INSERT INTO distance_result(city_id, college_id, dormitory_id, distance, create_time, update_time)
		SELECT t2.city_id, t2.college_id, t2.dormitory_id, 2*R*ASIN(d/2/R) AS distance, now() AS create_time, now() AS update_time
		FROM (SELECT 6378 AS R) t0,
		(SELECT t1.city_id, t1.college_id, t1.dormitory_id, SQRT(dx*dx+dy*dy+dz*dz) AS d
		FROM (
		SELECT p1.x-p2.x AS dx, p1.y-p2.y AS dy, p1.z-p2.z AS dz, p1.city_id, p1.college_id, p2.dormitory_id
		FROM view_college_glb p1
		INNER JOIN view_dormitory_glb p2
		ON p1.city_id = p2.city_id
		) t1) t2;
	</insert>

	<delete id="clearDistanceResult4City" parameterType='int'>
		DELETE FROM distance_result WHERE city_id = #{id};
	</delete>

	<insert id="calculateDistance4City" parameterType='int'>
		INSERT INTO distance_result(city_id, college_id, dormitory_id, distance, create_time, update_time)
		SELECT t2.city_id, t2.college_id, t2.dormitory_id, 2*R*ASIN(d/2/R) AS distance,
		now() AS create_time, now() AS update_time
		FROM (SELECT 6378 AS R) t0,
		(SELECT t1.city_id, t1.college_id, t1.dormitory_id, SQRT(dx*dx+dy*dy+dz*dz) AS d
		FROM (
		SELECT p1.x-p2.x AS dx, p1.y-p2.y AS dy, p1.z-p2.z AS dz, p1.city_id,
		p1.college_id, p2.dormitory_id
		FROM view_college_glb p1
		INNER JOIN view_dormitory_glb p2
		ON p1.city_id = p2.city_id AND p1.city_id = #{cityId}
		) t1) t2;
	</insert>

	<delete id="clearDistanceResult4College" parameterType='int'>
		DELETE FROM distance_result WHERE college_id = #{id};
	</delete>
	
	
	<delete id="clearDistanceResult4Dormitory" parameterType='int'>
		DELETE FROM distance_result WHERE dormitory_id = #{id};
	</delete>

	<insert id="calculateDistance4College" parameterType='int'>
		INSERT INTO distance_result(city_id, college_id, dormitory_id, distance, create_time, update_time)
		SELECT t2.city_id, t2.college_id, t2.dormitory_id, 2*R*ASIN(d/2/R) AS distance,
		now() AS create_time, now() AS update_time
		FROM (SELECT 6378 AS R) t0,
		(SELECT t1.city_id, t1.college_id, t1.dormitory_id, SQRT(dx*dx+dy*dy+dz*dz) AS d
		FROM (
		SELECT p1.x-p2.x AS dx, p1.y-p2.y AS dy, p1.z-p2.z AS dz, p1.city_id,
		p1.college_id, p2.dormitory_id
		FROM view_college_glb p1
		INNER JOIN view_dormitory_glb p2
		ON p1.city_id = p2.city_id AND p1.college_id = #{collegeId}
		) t1) t2;
	</insert>
	
	
	<insert id="calculateDistance4Dormitory" parameterType='int'>
		INSERT INTO distance_result(city_id, college_id, dormitory_id, distance, create_time, update_time)
		SELECT t2.city_id, t2.college_id, t2.dormitory_id, 2*R*ASIN(d/2/R) AS distance,
		now() AS create_time, now() AS update_time
		FROM (SELECT 6378 AS R) t0,
		(SELECT t1.city_id, t1.college_id, t1.dormitory_id, SQRT(dx*dx+dy*dy+dz*dz) AS d
		FROM (
		SELECT p1.x-p2.x AS dx, p1.y-p2.y AS dy, p1.z-p2.z AS dz, p1.city_id,
		p1.college_id, p2.dormitory_id
		FROM view_college_glb p1
		INNER JOIN view_dormitory_glb p2
		ON p1.city_id = p2.city_id AND p2.dormitory_id = #{dormitoryId}
		) t1) t2;
	</insert>
	
	<select id="queryContractType" resultType="hashmap">
		select id, name from contract_type;
	</select>
	
	<select id="queryDormitoryType" resultType="hashmap">
		select id, name from dormitory_type;
	</select>
</mapper>
