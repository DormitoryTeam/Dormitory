<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 

 
<mapper namespace="com.noeasy.money.model.Site">

	<sql id="limit-split-page">
		limit #{pageBean.pageStartIndex}, #{pageBean.pageSize}
	</sql>
	
	<select id="selectSlide" resultType="hashmap" parameterType="java.util.Map">
		select id, `desc`, path, redirecturl, `index`
		from slide
		where status = 1
		order by `index` asc
	</select>

	<select id="selectAllSlide" resultType="hashmap" parameterType="java.util.Map">
		select id, `desc`, path, `index`, redirecturl, status
		from slide
		order by `index` asc
	</select>

	<insert id="insertSlide" keyProperty="id" useGeneratedKeys="true" parameterType="java.util.Map">
		insert into slide (`redirecturl`, path, `index`, status) values (
		#{redirecturl,javaType=string,jdbcType=VARCHAR},
		#{path,javaType=string,jdbcType=VARCHAR},
		#{index,javaType=int,jdbcType=INTEGER},
		#{status,javaType=int,jdbcType=INTEGER}
		)
	</insert>

	<update id="updateSlideDesc" parameterType="java.util.Map">
		update slide set id = #{id}, redirecturl = #{redirecturl}
		<if test="desc != null">
			, `desc` = #{desc}
		</if>
		<if test="index != null">
			, `index` = #{index}
		</if>
		<if test="status != null">
			, status = #{status}
		</if>
		where id = #{id}
	</update>

	<delete id="deleteSlide">
		delete from slide
	</delete>

	<select id="selectArticlePage" resultType="com.noeasy.money.model.RichTextBean">
		select id, user_id userId, title, text textBodyByte, create_time createTime, `type` type, cover_path coverPath, status
		from article
	</select>

	<select id="selectArticle" resultType="com.noeasy.money.model.RichTextBean" parameterType="int">
		select id, user_id userId, title, text textBodyByte, create_time createTime, `type` type, cover_path coverPath, status
		from article
		where id = #{id}
	</select>

	<insert id="saveArticle" useGeneratedKeys="true" keyProperty="id" parameterType="com.noeasy.money.model.RichTextBean">
		insert into article (user_id, title, text, status, type, cover_path)
		values (
		#{userId}, #{title}, #{textBody}, #{status}, #{type}, #{coverPath}
		)
	</insert>

	<update id="updateArticle" parameterType="com.noeasy.money.model.RichTextBean">
		update article set user_id = #{userId}, title = #{title}, text = #{textBody}, status = #{status}, type = #{type}, cover_path = #{coverPath}
		where id = #{id}
	</update>

	<select id="selectArticleTitle" resultType="com.noeasy.money.model.RichTextBean" parameterType="java.util.Map">
		select id, user_id userId, title, text textBodyByte, create_time createTime, `type` type, cover_path coverPath, status from article
		where 1=1
		<if test="type != null">
			and type = #{type}
		</if>
		<if test="status != null">
			and status = #{status}
		</if>
		<if test="excludeStatus != null">
			and status != #{excludeStatus}
		</if>
		order by create_time desc
	</select>
	
	<select id="queryCompaniesCount" resultType="int" parameterType="com.noeasy.money.model.SimpleSearchBean">
		select count(*) from company
		where 1=1
		<if test="name != null">
		ane name like CONCAT('%', #{name}, '%')
		</if>
	</select>
	
	
	<select id="queryCompanies" resultType="hashmap" parameterType="com.noeasy.money.model.SimpleSearchBean">
		select id, name, status from company
		where 1=1
		<if test="name != null">
		ane name like CONCAT('%', #{name}, '%')
		</if>
		<if test="pageBean != null">
			<include refid="limit-split-page" />
		</if>
	</select>
	
	<insert id="saveCompany" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.Map">
		insert into company (name, status) values (#{name}, 1)
	</insert>

	<update id="updateCompanyStatus" parameterType="java.util.Map">
		update company set status = #{status} where id = #{id}
	</update>
	
	<select id="queryCities" resultType="hashmap" parameterType="com.noeasy.money.model.SimpleSearchBean">
		select id, country_id, name, name_ch, status, create_time, topCity
		from city where 1=1
		<if test="name != null">
			and name_ch like concat('%', #{name}, '%')
		</if>
		<if test="pageBean != null">
			<include refid="limit-split-page" />
		</if>
	</select>
	
	<select id="queryCitiesCount" resultType="int" parameterType="com.noeasy.money.model.SimpleSearchBean">
		select count(*)
		from city where 1=1
		<if test="name != null">
			and name_ch like concat('%', #{name}, '%')
		</if>
	</select>
	
	<insert id="saveCity" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.Map">
		insert into city (country_id, name, name_ch, status, topCity) values 
		(#{countryId}, #{originalName}, #{name}, #{status}, #{topCity});
	</insert>
	
	<update id="updateCity" parameterType="java.util.Map">
		update city set
		name = #{originalName},
		name_ch = #{name},
		topCity = #{topCity},
		status = #{status} 
		where id = #{id}
	</update>
	
	<select id="queryColleges" resultType="hashmap" parameterType="java.util.Map">
		select id, city_id, name, original_name, latitude, longitude, postalcode, status, create_time, topCollege
		from college where 1=1
		<if test="name != null">
			and name like concat('%', #{name}, '%')
		</if>
		<if test="cityId != null">
			and city_id = #{cityId}
		</if>
		<if test="pageBean != null">
			<include refid="limit-split-page" />
		</if>
	</select>
	
	<select id="queryCollegesCount" resultType="int" parameterType="java.util.Map">
		select count(*)
		from college where 1=1
		<if test="name != null">
			and name like concat('%', #{name}, '%')
		</if>
		<if test="cityId != null">
			and city_id = #{cityId}
		</if>
	</select>
	
	<insert id="saveCollege" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.Map">
		insert into college (city_id, name, original_name, latitude, longitude, postalcode, status, create_time, topCollege) values 
		(#{cityId}, #{name}, #{originalName}, #{latitude}, #{longitude}, #{postalcode}, #{status}, now(), #{topCollege});
	</insert>
	
	<update id="updateCollege" parameterType="java.util.Map">
		update college set
		name = #{name},
		original_name = #{originalName},
		city_id = #{cityId},
		latitude = #{latitude},
		longitude = #{longitude},
		postalcode = #{postalcode},
		topCollege = #{topCollege},
		status = #{status} 
		where id = #{id}
	</update>
</mapper>